#
# Copyright (C) 2024 nosignals
#
name: AutoCompiler OpenWrt Packages

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
  workflow_dispatch:
    inputs:
      compile_pkg:
        description: 'Packages to compile (default: all packages)'
        required: false
        default: ''
        type: string
      verbose:
        description: 'Enable verbose output (default: 0)'
        required: false
        default: '0'
        type: string
      without_pages:
        description: 'Skip deploying GitHub Pages'
        required: false
        default: false
        type: boolean

permissions:
  actions: write
  contents: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  build_ipk:
    name: Build OpenWrt Packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: [openwrt-23.05, openwrt-24.10, SNAPSHOT]
        arch: [x86_64, mips_24kc, mipsel_24kc, aarch64_cortex-a53, aarch64_cortex-a72, aarch64_generic]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: List Available Packages
        id: list_package
        if: inputs.compile_pkg == ''
        run: |
          find_packages() {
            local feed_dir="$1"
            if [ -d "$feed_dir" ]; then
              for dir in "$feed_dir"/*; do
                if [ -d "$dir" ] && [ -f "$dir/Makefile" ]; then
                  basename "$dir"
                fi
              done | sort -u | tr '\n' ' '
            fi
          }
          packages=$(find_packages "$GITHUB_WORKSPACE/feeds")
          echo "content=$packages" >> $GITHUB_OUTPUT
        shell: bash

      - name: Display Compiled Packages
        run: |
          echo "Packages to compile: ${{ steps.list_package.outputs.content }} ${{ inputs.compile_pkg }}"
        shell: bash

      - name: Create Artifacts Directory
        run: mkdir -p artifacts
        shell: bash

      - name: Build Packages
        uses: rtaserver-wrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
          ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
          FEED_DIR: ${{ github.workspace }}/feeds
          PACKAGES: ${{ steps.list_package.outputs.content }} ${{ inputs.compile_pkg }}
          EXTRA_FEEDS: src-git|kiddin9|https://github.com/kiddin9/kwrt-packages
          INDEX: 1
          V: ${{ inputs.verbose }}
          FIXUP: 1
          IGNORE_ERRORS: 1

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt_${{ matrix.release }}_${{ matrix.arch }}
          path: ${{ github.workspace }}/artifacts/bin/packages/${{ matrix.arch }}/*
          if-no-files-found: warn
          retention-days: 5

  push_packages:
    name: Push Packages to Repository
    needs: build_ipk
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout gh-pages Branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          lfs: false
          submodules: false

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Organize Artifacts
        run: |
          mkdir -p releases
          for version in openwrt-23.05 openwrt-24.10 SNAPSHOT; do
            vers=${version#openwrt-}
            vers=${vers/SNAPSHOT/snapshot}
            for arch in x86_64 mips_24kc mipsel_24kc aarch64_cortex-a53 aarch64_cortex-a72 aarch64_generic; do
              artifact_dir="artifacts/openwrt_${version}_${arch}"
              target_dir="releases/$vers/packages/$arch"
              if [ -d "$artifact_dir" ]; then
                mkdir -p "$target_dir"
                cp -rf "$artifact_dir"/* "$target_dir"/
                rm -rf "$target_dir"/{routing,telephony}
              fi
            done
          done
          rm -rf artifacts
        shell: bash

      - name: Display Repository Structure
        run: tree releases || ls -R releases
        shell: bash

      - name: Commit and Push Packages
        run: |
          git config user.name "GitHub Action"
          git config user.email "actions-user@users.noreply.github.com"
          git add releases
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update OpenWrt packages for ${{ matrix.release }}-${{ matrix.arch }}"
            git push
          fi
        shell: bash

  build_pages:
    name: Build GitHub Pages
    needs: push_packages
    if: inputs.without_pages == false && !cancelled()
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      - name: Checkout gh-pages Branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          lfs: true
          submodules: true

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Run Pre-build Script
        env:
          SERVER_HOME: releases
        run: ./prenodes.sh
        shell: bash

      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build Jekyll Site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
        shell: bash

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    name: Deploy GitHub Pages
    needs: build_pages
    if: inputs.without_pages == false && !cancelled()
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  clear_artifact:
    name: Clear Old Artifacts
    needs: push_packages
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete Old Workflow Artifacts
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 5
          keep_minimum_runs: 2